// Copyright (c) 2009 Chris Pickel <sfiera@gmail.com>
//
// This file is part of libsfz, a free software project.  You can redistribute it and/or modify it
// under the terms of the MIT License.

#include "sfz/PosixFormatter.hpp"

#include <errno.h>
#include <string.h>
#include "sfz/String.hpp"

namespace sfz {

int posix_errno() {
    return errno;
}

void print_to(PrintTarget out, const PosixStrerror& error) {
    static const int buf_size = 256;
    char buf[buf_size];
    strerror_r(errno, buf, buf_size);
    // TODO(sfiera): infer the encoding of `buf` based on the locale.  The string generated by
    // strerror_r() is locale-dependent, so we have no guarantee that it is in fact ASCII, as
    // is presently assumed.
    out.append(BytesPiece(reinterpret_cast<uint8_t*>(buf), strlen(buf)), ascii_encoding());
}

PosixStrerror posix_strerror(int error) {
    PosixStrerror result = { error ? error : errno };
    return result;
}

}  // namespace sfz

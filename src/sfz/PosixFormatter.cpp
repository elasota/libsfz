// Copyright (c) 2009 Chris Pickel <sfiera@gmail.com>
//
// This file is part of libsfz, a free software project.  You can redistribute it and/or modify it
// under the terms of the MIT License.

#include "sfz/PosixFormatter.hpp"

#include <errno.h>
#include <string.h>

namespace sfz {

PrintItem posix_errno() {
    return PrintItem(errno);
}

namespace {

class PosixStrerrorPrinter : public PrintItem::Impl {
  public:
    PosixStrerrorPrinter(int error)
        : _errno(error) { }

    virtual void print_to(PrintTarget out) const {
        static const int buf_size = 256;
        char buf[buf_size];
        strerror_r(_errno, buf, buf_size);
        // TODO(sfiera): infer the encoding of `buf` based on the locale.  The string generated by
        // strerror_r() is locale-dependent, so we have no guarantee that it is in fact ASCII, as
        // is presently assumed.
        out.append(BytesPiece(reinterpret_cast<uint8_t*>(buf), strlen(buf)), ascii_encoding());
    }

  private:
    int _errno;
};

}  // namespace

PrintItem posix_strerror(int error) {
    if (error == 0) {
        return PrintItem::make(new PosixStrerrorPrinter(errno));
    } else {
        return PrintItem::make(new PosixStrerrorPrinter(error));
    }
}

}  // namespace sfz

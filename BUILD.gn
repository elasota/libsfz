# Copyright (c) 2019 The libsfz Authors
# This file is part of libsfz, a free software project.  You can redistribute it and/or modify it
# under the terms of the MIT License.

config("libsfz_private") {
  include_dirs = [
    "include/all",
    "src/all",
  ]
  if (target_os == "win") {
  } else {
    include_dirs += [
      "include/posix",
      "src/posix",
    ]
  }
  cflags = [
    "-Wall",
    "-Wextra",
    "-Wsign-compare",
    "-Wnarrowing",
    "-Werror",
  ]
}

config("libsfz_public") {
  include_dirs = [ "include/all" ]
  if (target_os == "win") {
  } else {
    include_dirs += [ "include/posix" ]
  }
}

static_library("libsfz") {
  sources = [
    "include/all/sfz/args.hpp",
    "include/all/sfz/encoding.hpp",
    "include/all/sfz/os.hpp",
    "src/all/sfz/args.cpp",
    "src/all/sfz/encoding.cpp",
    "src/all/sfz/format.cpp",
    "src/all/sfz/string-utils.cpp",
  ]
  if (target_os == "win") {
  } else {
    sources += [
      "include/all/sfz/digest.hpp",
      "include/posix/sfz/file.hpp",
      "src/all/sfz/digest.cpp",
      "src/posix/sfz/error.cpp",
      "src/posix/sfz/error.hpp",
      "src/posix/sfz/file.cpp",
      "src/posix/sfz/os.cpp",
    ]
  }
  public_deps = [
    "//ext/procyon:procyon-cpp",
  ]
  configs += [ ":libsfz_private" ]
  public_configs = [ ":libsfz_public" ]
}

executable("args-test") {
  sources = [
    "src/all/sfz/args.test.cpp",
  ]
  if (target_os == "win") {
    output_extension = "exe"
  }
  deps = [
    ":libsfz",
    "//ext/gmock:gmock_main",
  ]
}

if (target_os != "win") {
  executable("digest-test") {
    sources = [
      "src/all/sfz/digest.test.cpp",
    ]
    if (target_os == "win") {
      output_extension = "exe"
    }
    deps = [
      ":libsfz",
      "//ext/gmock:gmock_main",
    ]
  }
}

executable("encoding-test") {
  sources = [
    "src/all/sfz/encoding.test.cpp",
  ]
  if (target_os == "win") {
    output_extension = "exe"
  }
  deps = [
    ":libsfz",
    "//ext/gmock:gmock_main",
  ]
}

executable("format-test") {
  sources = [
    "src/all/sfz/format.test.cpp",
  ]
  if (target_os == "win") {
    output_extension = "exe"
  }
  deps = [
    ":libsfz",
    "//ext/gmock:gmock_main",
  ]
}

executable("optional-test") {
  sources = [
    "src/all/sfz/optional.test.cpp",
  ]
  if (target_os == "win") {
    output_extension = "exe"
  }
  deps = [
    ":libsfz",
    "//ext/gmock:gmock_main",
  ]
}

if (target_os != "win") {
  executable("os-test") {
    sources = [
      "src/all/sfz/os.test.cpp",
    ]
    if (target_os == "win") {
      output_extension = "exe"
    }
    deps = [
      ":libsfz",
      "//ext/gmock:gmock_main",
    ]
  }
}

executable("string-map-test") {
  sources = [
    "src/all/sfz/string-map.test.cpp",
  ]
  if (target_os == "win") {
    output_extension = "exe"
  }
  deps = [
    ":libsfz",
    "//ext/gmock:gmock_main",
  ]
}

executable("string-utils-test") {
  sources = [
    "src/all/sfz/string-utils.test.cpp",
  ]
  if (target_os == "win") {
    output_extension = "exe"
  }
  deps = [
    ":libsfz",
    "//ext/gmock:gmock_main",
  ]
}
